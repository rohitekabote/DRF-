openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/v1/blog/:
    get:
      operationId: api_v1_blog_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: order-by
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: q
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogList'
          description: ''
    post:
      operationId: api_v1_blog_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
  /api/v1/blog/{id}:
    get:
      operationId: api_v1_blog_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    put:
      operationId: api_v1_blog_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    patch:
      operationId: api_v1_blog_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlog'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    delete:
      operationId: api_v1_blog_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/comment/:
    get:
      operationId: api_v1_comment_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommemtList'
          description: ''
    post:
      operationId: api_v1_comment_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Commemt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Commemt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Commemt'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commemt'
          description: ''
  /api/v1/comment/{id}:
    get:
      operationId: api_v1_comment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commemt'
          description: ''
    put:
      operationId: api_v1_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Commemt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Commemt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Commemt'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commemt'
          description: ''
    patch:
      operationId: api_v1_comment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommemt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommemt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommemt'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commemt'
          description: ''
    delete:
      operationId: api_v1_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/employees/:
    get:
      operationId: api_v1_employees_list
      parameters:
      - in: query
        name: designation
        schema:
          type: string
      - in: query
        name: emp_name
        schema:
          type: string
      - in: query
        name: id_max
        schema:
          type: string
        description: 'To EMP id:'
      - in: query
        name: id_min
        schema:
          type: string
        description: 'From EMP id:'
      - name: page-num
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedemployeeserializerList'
          description: ''
    post:
      operationId: api_v1_employees_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employeeserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/employeeserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/employeeserializer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employeeserializer'
          description: ''
  /api/v1/employees/{id}/:
    get:
      operationId: api_v1_employees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employeeserializer'
          description: ''
    put:
      operationId: api_v1_employees_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employeeserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/employeeserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/employeeserializer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employeeserializer'
          description: ''
    patch:
      operationId: api_v1_employees_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedemployeeserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedemployeeserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedemployeeserializer'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employeeserializer'
          description: ''
    delete:
      operationId: api_v1_employees_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/student/{id}:
    get:
      operationId: api_v1_student_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_student_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_student_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/students/:
    get:
      operationId: api_v1_students_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_students_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Blog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Commemt'
          readOnly: true
        blog_title:
          type: string
          maxLength: 100
        blog_body:
          type: string
      required:
      - blog_body
      - blog_title
      - comments
      - id
    Commemt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
        bolg:
          type: integer
      required:
      - bolg
      - comment
      - id
    PaginatedBlogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Blog'
    PaginatedCommemtList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Commemt'
    PaginatedemployeeserializerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page-num=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page-num=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/employeeserializer'
    PatchedBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Commemt'
          readOnly: true
        blog_title:
          type: string
          maxLength: 100
        blog_body:
          type: string
    PatchedCommemt:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
        bolg:
          type: integer
    Patchedemployeeserializer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        emp_id:
          type: string
          maxLength: 10
        emp_name:
          type: string
          maxLength: 50
        designation:
          type: string
          maxLength: 40
    employeeserializer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        emp_id:
          type: string
          maxLength: 10
        emp_name:
          type: string
          maxLength: 50
        designation:
          type: string
          maxLength: 40
      required:
      - designation
      - emp_id
      - emp_name
      - id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
